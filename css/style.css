/*Nesting o anidamiento*/
/* Variables */
/*con el uso de variables de scss dejaria de existir el :root de css*/
/*listas*/
.unboton-ok {
  color: green;
  font-size: 38px;
}

.unboton-cancel {
  color: red;
}

/*mapas*/
/*a diferencia de las listas, me permiten crear como una lista pero de un monton de estilos agrupados que podria usar en una seccion entera*/
/*extensiones*/
/*son como un paquete de propiedades que quiero escribir una sola vez pero implementarlos en varios lugares */
/*se crean con un placeholder y con las propiedades de css*/
/*el placeholder es un simbolo de % porcentaje */
.m-disabled, .m-okey, .m-error {
  display: flex;
  justify-content: center;
  align-items: center;
}

.m-disabled, .m-okey, .m-error {
  border: 1px solid black;
  border-radius: 6px;
}

.m-error {
  background-color: red;
  /*puedo heredar la extension*/
}

.m-okey {
  background-color: green;
}

.m-disabled {
  background-color: gray;
}

header {
  /*background-color: $bg-color-general;*/
  background-color: black;
}
header nav ul {
  list-style: none;
}
header nav ul li {
  /*list-style: circle;*/
  list-style: circle;
}
header nav ul li a {
  text-decoration: underline;
  /* & sumar pseudoclases o pseudoelementos */
}
header nav ul li a:hover {
  text-decoration: none;
  font-size: 40px;
}

.footer-niki {
  background-color: green;
}
.footer-niki i {
  border: 2px solid black;
}

/*listas*/
.unboton-ok {
  color: green;
  font-size: 38px;
}

.unboton-cancel {
  color: red;
}

/* Variables */
/*con el uso de variables de scss dejaria de existir el :root de css*/
/*colores de mi marca */
.borde-menu {
  border: 1px solid #330000;
}

.bg-products {
  background-color: #090;
}
.bg-products:hover {
  background-color: lime;
}

.textos {
  color: rgba(153, 0, 0, 0.8);
}

.section-loca {
  background-color: #4d4d00;
}

.saturado {
  color: #990000;
}

/*extensiones*/
/*son como un paquete de propiedades que quiero escribir una sola vez pero implementarlos en varios lugares */
/*se crean con un placeholder y con las propiedades de css*/
/*el placeholder es un simbolo de % porcentaje */
.m-error, .m-okey, .m-disabled {
  display: flex;
  justify-content: center;
  align-items: center;
}

.m-error, .m-okey, .m-disabled {
  border: 1px solid black;
  border-radius: 6px;
}

.m-error {
  background-color: red;
  /*puedo heredar la extension*/
}

.m-okey {
  background-color: green;
}

.m-disabled {
  background-color: gray;
}

/*operadores -no es tan usado porque ahora css tiene una funcion que se llama calc*/
.img-principal {
  width: 100%;
}

/*mixin a diferencia de los extends, me permite agregar un parametro vacio al cual le voy a dar un valor en el futuro*/
/*mixin es una especie de constructor, porque el constructor es como una especie de template de lo que vamos a necesitar pero sin los valores de las propiedades, que las vamos a definir en el futuro*/
.animaciones {
  background-color: green;
  width: 100%;
  padding: 22px;
  border: 1px solid black;
}

.animaciones-dos {
  background-color: blue;
  width: 50%;
  padding: 18px;
  border: 6px dotted gray;
}

.magic {
  -webkit-transform: scale(4);
  -o-transform: scale(4);
  -moz-transform: scale(4);
  transform: scale(4);
}

.loca {
  -webkit-transform: rotate(90deg);
  -o-transform: rotate(90deg);
  -moz-transform: rotate(90deg);
  transform: rotate(90deg);
}

.bg-condicion {
  border: 1px solid black;
  background-color: red;
}

.bg-nuevo {
  border: 2px dotted gray;
  padding: 22px;
}

/*# sourceMappingURL=style.css.map */
